{"version":3,"sources":["components/Content/Cards/Item/index.js","components/Content/Cards/Item/Item.js","components/Content/Cards/slide.js","components/Content/Confirm/index.js","components/Content/Confirm/Confirm.js","components/Content/Cards/index.js","components/Content/Cards/Cards.js","components/Content/Menu/index.js","components/Content/Menu/Menu.js","components/Content/Burger/index.js","components/Content/Burger/Burger.js","components/Content/Editing/index.js","components/Content/Editing/Editing.js","components/Content/index.js","components/Content/Content.js","components/Adding/index.js","components/Adding/Adding.js","components/Auth/Login/index.js","components/Auth/Login/Login.js","components/Auth/Signup/index.js","components/Auth/Signup/Signup.js","components/Auth/index.js","components/Auth/Auth.js","components/Loading/index.js","components/Loading/Loading.js","components/Alert/index.js","components/Alert/Alert.js","App.js","index.js"],"names":["Item","openEditing","e","stopPropagation","props","setEditing","this","question","num","answer","replace","delClass","editClass","areShuffled","className","onClick","flip","id","ReactHtmlParser","type","icon","faEdit","faTrashAlt","deleteCard","React","Component","slide","carousel","children","length","style","transitionProperty","startX","changedTouches","clientX","margin","Math","abs","parseFloat","getComputedStyle","marginLeft","width","blocksAmount","cards","currCard","diffX","lastX","touchMove","x","addEventListener","touchEnd","checkPoints","i","max","endX","min","setCurrCard","removeEventListener","Confirm","addClass","data-del","Cards","state","isCounterInput","confirm","document","querySelector","classList","remove","handler","target","tagName","add","dataset","del","delCard","list","setTimeout","setType","clear","firstCard","renderCounter","len","curr","hasCards","onKeyUp","counterInput","autoFocus","onBlur","setState","maxLength","clickFunc","isNaN","Number","value","key","delay","call","q","a","direction","clientWidth","documentElement","mLeft","genCards","faArrowRight","move","faArrowLeft","Menu","themeClicked","index","setTheme","localStorage","setItem","addTheme","input","contains","toggle","focus","addOnInput","button","keyUp","chosenTheme","themes","data-num","delTheme","isOpen","genThemes","onInput","Burger","clicked","currentTarget","toggleMenu","cropName","name","slice","trim","Editing","save","cardsInfo","theme","updateCards","card","data-type","defaultValue","faTimes","Content","isMenuOpen","JSON","parse","getItem","shuffledThemes","showEditing","counter","fetch","url","method","headers","body","stringify","then","response","status","json","user","info","push","newCards","filter","el","shuffleTheme","indexOf","j","floor","random","all","newCurr","quit","href","window","location","match","assign","show","renderAdding","cardsLength","to","faRandom","map","Adding","validate","preventDefault","warning","Login","login","toLowerCase","password","test","users","find","checkLogin","showAlert","enter","minLength","authOnInput","placeholder","setWindow","Signup","checkInput","signup","querySelectorAll","confPassword","showInfo","secondPasswordInput","Auth","text","alert","textContent","auth","setUsername","toggleInfo","shouldShow","renderWindow","setInfoText","setAuthTitle","Loading","forcedDisplay","viewBox","cx","cy","r","stroke","strokeWidth","fill","strokeDasharray","Alert","hide","alertWin","App","parseInt","username","render","changeColorTheme","ping","setInterval","pingServer","bind","clearInterval","faMoon","exact","path","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.3537150e.chunk.js","sourcesContent":["import Item from './Item';\r\n\r\nexport default Item;","import React from 'react';\r\nimport './Item.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrashAlt, faEdit } from '@fortawesome/free-regular-svg-icons';\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\nexport default class Item extends React.Component {\r\n    openEditing = e => {\r\n        e.stopPropagation();\r\n        this.props.setEditing(true);\r\n    }\r\n\r\n    render() {\r\n        let { question, num, answer } = this.props;\r\n        question = question.replace(/\\n/g, '</br>');\r\n        answer = answer.replace(/\\n/g, \"<br/>\");\r\n        let delClass = 'cards__delete' + (~num ? '' : '_hidden');\r\n        let editClass = 'cards__edit' + (~num && !this.props.areShuffled ? '' : '_hidden');\r\n        return (\r\n            <li className={'cards__item'} onClick={this.props.flip}>\r\n                <span id={`card-${num}`} className='cards__item-text' >\r\n                    {ReactHtmlParser(this.props.type === 'q' ? question : answer)}\r\n                </span>\r\n                <FontAwesomeIcon className={editClass} icon={faEdit}\r\n                                 onClick={this.openEditing} />\r\n                <FontAwesomeIcon \r\n                    className={delClass}\r\n                    icon={faTrashAlt} \r\n                    onClick={(e) => this.props.deleteCard(e, this.props.num)} />\r\n            </li>\r\n        )\r\n    }\r\n}","function slide(e, carousel) {\r\n    if(carousel.children.length <= 1) return;\r\n\r\n    // let transitionProps = getComputedStyle(carousel).transitionProperty;\r\n    // carousel.style.transitionProperty = transitionProps.slice().replace(/(margin-left,|, margin-left|margin-left)/, '');\r\n    carousel.style.transitionProperty = 'transform';\r\n    \r\n    let startX = e.changedTouches[0].clientX;\r\n    let margin = Math.abs(parseFloat(getComputedStyle(carousel).marginLeft));\r\n    let width = parseFloat(getComputedStyle(carousel).width);\r\n    let blocksAmount = this.props.cards.length;\r\n    let { currCard } = this.props;\r\n    // console.log(currentIndex)\r\n    let diffX = null;\r\n    let lastX = startX;\r\n\r\n    let touchMove = e => {\r\n        let x = e.changedTouches[0].clientX;\r\n        if (Math.abs(x - startX) < 30) return;\r\n        carousel.addEventListener('touchend', touchEnd);\r\n        carousel.style.marginLeft = `${-margin + x - startX}px`;\r\n        diffX = x > lastX ? -1 : 1;\r\n        lastX = x;\r\n    }\r\n    \r\n    let checkPoints = [];\r\n    for (let i = 0; i < blocksAmount; ++i) {\r\n        checkPoints[i] = i * width / blocksAmount;\r\n    }\r\n    let max = checkPoints[blocksAmount - 1];\r\n\r\n    let touchEnd = e => {\r\n        let endX = e.changedTouches[0].clientX;\r\n        carousel.style.transitionProperty = 'margin-left, transform';\r\n        if (diffX === 1 && startX > endX) {\r\n            carousel.style.marginLeft = `-${checkPoints[currCard + 1] || max}px`;\r\n            currCard = Math.min(currCard + 1, blocksAmount - 1);\r\n        } else if (diffX === -1 && endX > startX) {\r\n            carousel.style.marginLeft = `-${checkPoints[currCard - 1] || 0}px`;\r\n            currCard = Math.max(currCard - 1, 0);\r\n        } else {\r\n            carousel.style.marginLeft = `-${margin}px`;\r\n        }\r\n        // this.setState({ currentIndex: currentIndex });\r\n        this.props.setCurrCard(currCard);\r\n        carousel.removeEventListener('touchmove', touchMove);\r\n        carousel.removeEventListener('touchend', touchEnd);\r\n    }\r\n    carousel.addEventListener('touchmove', touchMove);\r\n}\r\n\r\nexport default slide;","import Confirm from './Confirm';\r\n\r\nexport default Confirm;","import React from 'react';\r\nimport './Confirm.css';\r\n\r\nexport default class Confirm extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className={`${this.props.addClass} confirm confirm_hidden`}>\r\n                <div className='confirm__window'>\r\n                    <p className='confirm__title'>Are you sure?</p>\r\n                    <div className='confirm__buttons'>\r\n                        <button className='confirm__btn confirm__btn_no' data-del='no'>Oops! No...</button>\r\n                        <button className='confirm__btn confirm__btn_yes' data-del='yes'>Yes!</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import Cards from './Cards';\r\n\r\nexport default Cards;","import React from 'react';\r\nimport './Cards.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowRight, faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTrashAlt } from '@fortawesome/free-regular-svg-icons';\r\nimport Item from './Item';\r\nimport slide from './slide';\r\nimport Confirm from '../Confirm';\r\n\r\n\r\nexport default class Cards extends React.Component {\r\n    state = {\r\n        cards: this.props.cards,\r\n        isCounterInput: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        let carousel = document.querySelector('.cards__list');\r\n        carousel.addEventListener('touchstart', e => slide.call(this, e, carousel));\r\n    }\r\n\r\n    deleteCard = (e, num) => {\r\n        e.stopPropagation();\r\n        let confirm = document.querySelector('.cards__confirm');\r\n        confirm.classList.remove('confirm_hidden');\r\n        let handler = e => {\r\n            if (e.target.tagName !== 'BUTTON') return;\r\n            confirm.removeEventListener('click', handler);\r\n            confirm.classList.add('confirm_hidden');\r\n            if (e.target.dataset.del === 'no') return;\r\n            this.props.delCard(num, false);\r\n        }\r\n        confirm.addEventListener('click', handler);\r\n    }\r\n\r\n    *genCards() {\r\n        let { cards } = this.props;\r\n        for (let i in cards) {\r\n            yield (\r\n                <Item question={cards[i].q} answer={cards[i].a} num={i} key={i} flip={this.flip} areShuffled={this.props.areShuffled} \r\n                      deleteCard={this.deleteCard} type={this.props.type} setEditing={this.props.setEditing} />\r\n            )\r\n        }\r\n    }\r\n\r\n    flip = () => {\r\n        let list = document.querySelector('.cards__list');\r\n        list.classList.add('cards__list_hidden');\r\n\r\n        setTimeout(() => {  \r\n            let { type } = this.props;\r\n            this.props.setType(type === 'q' ? 'a' : 'q');\r\n            list.classList.remove('cards__list_hidden');\r\n        }, 300);\r\n    }\r\n\r\n    move(direction) {\r\n        let delay = 0;\r\n        if (this.props.type === 'a') {\r\n            this.flip();\r\n            delay = 300;\r\n        }\r\n        setTimeout(() => {\r\n            let { currCard, setCurrCard, cards } = this.props;\r\n            if (direction === 'left' && currCard !== 0) {\r\n                setCurrCard(currCard - 1);\r\n            } else if (direction === 'right' && currCard !== cards.length - 1) {\r\n                setCurrCard(currCard + 1);\r\n            }\r\n        }, delay)\r\n    }\r\n\r\n    clear = () => {\r\n        let confirm = document.querySelector('.cards__confirm');\r\n        confirm.classList.remove('confirm_hidden');\r\n        let handler = e => {\r\n            if (e.target.tagName !== 'BUTTON') return;\r\n            confirm.removeEventListener('click', handler);\r\n            confirm.classList.add('confirm_hidden');\r\n            if (e.target.dataset.del === 'no') return;\r\n            this.props.delCard(null, true);\r\n        }\r\n        confirm.addEventListener('click', handler);\r\n    }\r\n\r\n    firstCard = () => {\r\n        if (this.props.cards.length) return;\r\n        return (\r\n            <Item question={'Hello! Click to flip!'} answer={'Click again!'} num={-1}\r\n                  type={this.props.type} flip={this.flip} setEditing={this.props.setEditing} />\r\n        )\r\n    }\r\n\r\n    renderCounter = (len, curr) => {\r\n        let hasCards = !!this.props.cards.length;\r\n        if (this.state.isCounterInput && hasCards) {\r\n            return <input className='counter__input' onKeyUp={this.counterInput} autoFocus\r\n                          onBlur={() => this.setState({isCounterInput: false})} maxLength='3' />\r\n        } else {\r\n            let clickFunc = hasCards ? () => this.setState({isCounterInput: true}) : null;\r\n            return (\r\n                <span onClick={clickFunc}>\r\n                    {len ? curr + 1 : 0}\r\n                </span>\r\n            )\r\n        }\r\n    }\r\n\r\n    counterInput = e => {\r\n        let num = isNaN(Number(e.target.value)) ? null : (Number(e.target.value) || 1);\r\n        if (!num || num < 1 || num > this.props.cards.length) {\r\n            e.target.classList.add('counter__input_wrong');\r\n            return;\r\n        }\r\n        e.target.classList.remove('counter__input_wrong');\r\n        if (e.key === 'Enter') {\r\n            this.setState({\r\n                isCounterInput: false,\r\n            });\r\n            let delay = 0;\r\n            if (this.props.type === 'a') {\r\n                this.flip();\r\n                delay = 300;\r\n            }\r\n            setTimeout(() => this.props.setCurrCard(num - 1), delay);\r\n            // this.props.setCurrCard(num - 1);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let curr = this.props.currCard;\r\n        let len = this.props.cards.length;\r\n        let clientWidth = document.documentElement.clientWidth;\r\n        let containerWidth = clientWidth > 500 ? 600 : clientWidth * 0.9;\r\n        let mLeft = -containerWidth * curr + 'px';\r\n        return (\r\n            <div className='cards'>\r\n                <div className='cards__container' >\r\n                    <ul className='cards__list' style={{marginLeft: mLeft}}>\r\n                        {this.firstCard()}\r\n                        {[...this.genCards()]}\r\n                    </ul>\r\n                </div>\r\n                <p className='cards__counter counter'>\r\n                    {this.renderCounter(len, curr)}\r\n                    {' / '}<span>{len}</span>\r\n                </p>\r\n                <FontAwesomeIcon \r\n                    className={`cards__arrow arrow__right ${curr === len - 1 || !len ? 'cards__arrow_hidden' : ''}`}\r\n                    icon={faArrowRight}\r\n                    onClick={() => this.move('right')} />\r\n                <FontAwesomeIcon \r\n                    className={`cards__arrow arrow__left ${curr === 0 ? 'cards__arrow_hidden' : ''}`}\r\n                    icon={faArrowLeft}\r\n                    onClick={() => this.move('left')} />\r\n                <button className='cards__clear' onClick={this.clear} >\r\n                    <FontAwesomeIcon icon={faTrashAlt} />\r\n                    &ensp;Clear all\r\n                </button>\r\n                <Confirm addClass='cards__confirm'/>\r\n            </div>\r\n        )\r\n    }\r\n}","import Menu from './Menu';\r\n\r\nexport default Menu;","import React from 'react';\r\nimport './Menu.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrashAlt } from '@fortawesome/free-regular-svg-icons';\r\n\r\nexport default class Menu extends React.Component {\r\n    themeClicked = (e) => {\r\n        let index = Number(e.target.dataset.num);\r\n        this.props.setTheme(index);\r\n        this.props.setType('q');\r\n        localStorage.setItem('theme', index);\r\n    }\r\n\r\n    *genThemes() {\r\n        let { chosenTheme, themes } = this.props;\r\n        for (let i in themes) {\r\n            yield (\r\n                <div className={`menu__theme theme ${Number(i) === chosenTheme ? 'theme_chosen' : ''}`} key={i}>\r\n                    <p className='theme__name' data-num={i} onClick={this.themeClicked}>\r\n                        {themes[i]}\r\n                    </p>\r\n                    <FontAwesomeIcon icon={faTrashAlt} onClick={this.props.delTheme}\r\n                                     className={`theme__del ${i === '0' ? 'theme__del_hidden' : ''}`} />\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    addTheme = () => {\r\n        let input = document.querySelector('.menu__add-input');\r\n        if (input.classList.contains('menu__add-input_show')) {\r\n            let { value } = input;\r\n            if (value.length) {\r\n                this.props.addTheme(value);\r\n                input.value = '';\r\n            }\r\n        }\r\n        input.classList.toggle('menu__add-input_show');\r\n        document.querySelector('.menu__add-icon').classList.remove('menu__add-icon_red');\r\n        input.focus();\r\n    }\r\n\r\n    addOnInput = e => {\r\n        let button = document.querySelector('.menu__add-icon');\r\n        if (e.target.value) {\r\n            button.classList.add('menu__add-icon_red');\r\n        } else {\r\n            button.classList.remove('menu__add-icon_red');\r\n        }\r\n    }\r\n\r\n    keyUp = e => {\r\n        if (e.key === 'Enter') {\r\n            this.addTheme();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { isOpen } = this.props;\r\n        return (\r\n            <div className={`menu ${isOpen ? '' : 'menu_hidden'}`}>\r\n                {[...this.genThemes()]}\r\n                <div className='menu__add'>\r\n                    <p className='menu__add-icon' onClick={this.addTheme}>+</p>\r\n                    <input className='menu__add-input' onInput={this.addOnInput} onKeyUp={this.keyUp} maxLength='20'/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n} ","import Burger from './Burger';\r\n\r\nexport default Burger;","import React from 'react';\r\nimport './Burger.css';\r\n\r\nexport default class Burger extends React.Component {\r\n    clicked = (e) => {\r\n        e.currentTarget.classList.toggle('burger_cross');\r\n        document.querySelector('.burger__username').classList.toggle('burger__username_show');\r\n        this.props.toggleMenu();\r\n    }\r\n\r\n    cropName = name => {\r\n        if (name.length < 13) return name;\r\n        return name.slice(0, 11).trim() + '...';\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='burger'>\r\n                <div className='burger__icon' onClick={this.clicked}>\r\n                    <div className='burger__line burger__line_top'></div>\r\n                    <div className='burger__line burger__line_center'></div>\r\n                    <div className='burger__line burger__line_center'></div>\r\n                    <div className='burger__line burger__line_bottom'></div>\r\n                </div>\r\n                <p className='burger__username'>{this.cropName(this.props.name)}</p>\r\n            </div>\r\n        )\r\n    }\r\n}","import Editing from './Editing';\r\n\r\nexport default Editing;","import React from 'react';\r\nimport './Editing.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default class Editing extends React.Component {\r\n    save = () => {\r\n        let question = document.querySelector('.field__input[data-type=\"q\"]').value;\r\n        let answer = document.querySelector('.field__input[data-type=\"a\"]').value;\r\n        if (!question.trim() || !answer.trim()) return;\r\n\r\n        let {currCard, cardsInfo, theme } = this.props;\r\n        let { q, a } = cardsInfo[theme].cards[currCard];\r\n        if (q === question && a === answer) {\r\n            this.props.setEditing(false);\r\n            return;\r\n        }\r\n        cardsInfo[theme].cards[currCard].q = question;\r\n        cardsInfo[theme].cards[currCard].a = answer;\r\n        this.props.updateCards(cardsInfo, theme, currCard);\r\n        this.props.setEditing(false);\r\n    }\r\n\r\n    render() {\r\n        let {currCard, cardsInfo, theme } = this.props;\r\n        let card = cardsInfo[theme].cards[currCard] || {q: '', a: ''};\r\n        return (\r\n            <div className='editing'>\r\n                <div className='editing__window'>\r\n                    <p className='editing__title'>Editing card</p>\r\n                    <div className='editing__info info'>\r\n                        <p className='info__theme'><span>Theme: </span>{cardsInfo[theme].theme}</p>\r\n                        <p className='info__cards'><span>Card: </span>{currCard + 1}</p>\r\n                    </div>\r\n                    <div className='editing__field field'>\r\n                        <p className='field__title'>question</p>\r\n                        <textarea className='field__input field__input_small' data-type='q' defaultValue={card.q}></textarea>\r\n                    </div>\r\n                    <div className='editing__field field'>\r\n                        <p className='field__title'>answer</p>\r\n                        <textarea className='field__input field__input_big' data-type='a' defaultValue={card.a}></textarea>\r\n                    </div>\r\n                    <button className='editing__save' onClick={this.save}>Save</button>\r\n                    <FontAwesomeIcon icon={faTimes} className='editing__close'\r\n                                     onClick={() => this.props.setEditing(false)} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import Content from './Content';\r\n\r\nexport default Content;","import React from 'react';\r\nimport './Content.css';\r\nimport Cards from './Cards';\r\nimport Menu from './Menu';\r\nimport Burger from './Burger';\r\nimport Confirm from './Confirm';\r\nimport Editing from './Editing';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faRandom } from '@fortawesome/free-solid-svg-icons';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Content extends React.Component {\r\n    componentDidMount() {\r\n        document.querySelector('.loading').classList.add('loading_hidden');\r\n    }\r\n\r\n    state = {\r\n        isMenuOpen: false,\r\n        chosenTheme: this.props.theme,\r\n        cardsInfo: JSON.parse(localStorage.getItem('cards')),\r\n        shuffledThemes: [],\r\n        type: 'q',\r\n        showEditing: false,\r\n        counter: 0\r\n    }\r\n\r\n    toggleMenu = () => {\r\n        this.setState({\r\n            isMenuOpen: !this.state.isMenuOpen\r\n        })\r\n    }\r\n\r\n    setType = (name) => {\r\n        this.setState({\r\n            type: name\r\n        });\r\n    }\r\n\r\n    setTheme = num => {\r\n        this.setState({\r\n            chosenTheme: num,\r\n        })\r\n        this.setCurrCard(0);\r\n    }\r\n\r\n    setCurrCard = num => {\r\n        this.props.setCurrCard(num);\r\n    }\r\n\r\n    updateCards = (cards, theme, curr) => {\r\n        document.querySelector('.loading').classList.remove('loading_hidden');\r\n        fetch(this.props.url + this.props.id, {\r\n            method: \"PUT\",\r\n            headers:{\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ \"info\": cards, \"name\": this.props.name })\r\n        })\r\n        .then(response => {\r\n            if (response.status === 200) {\r\n                return response.json();\r\n            } else {\r\n                document.querySelector('.loading').classList.add('loading_hidden');\r\n            }\r\n        })\r\n        .then(user => {\r\n            document.querySelector('.loading').classList.add('loading_hidden');\r\n            this.setState({\r\n                cardsInfo: user.info,\r\n                chosenTheme: theme,\r\n            });\r\n            this.setCurrCard(curr);\r\n            localStorage.setItem('cards', JSON.stringify(user.info));\r\n        })\r\n    }\r\n\r\n    addTheme = name => {\r\n        let { cardsInfo } = this.state;\r\n        cardsInfo.push({\r\n            theme: name,\r\n            cards: []\r\n        });\r\n        this.updateCards(cardsInfo, this.state.chosenTheme, this.props.currCard);\r\n    }\r\n\r\n    delTheme = () => {\r\n        let newCards = this.state.cardsInfo.filter((el, i) => i !== this.state.chosenTheme);\r\n        this.updateCards(newCards, 0, this.props.currCard);\r\n    }\r\n\r\n    shuffleTheme = (e) => {\r\n        let { cardsInfo, chosenTheme, shuffledThemes } = this.state;\r\n\r\n        let { cards } = JSON.parse(localStorage.getItem('cards'))[chosenTheme];\r\n        if (!~shuffledThemes.indexOf(chosenTheme)) {\r\n            for (let i = cards.length - 1; i > 0; --i) {\r\n                let j = Math.floor(Math.random() * (i + 1));\r\n                [cards[i], cards[j]] = [cards[j], cards[i]];\r\n            }\r\n            shuffledThemes.push(chosenTheme);\r\n        } else {\r\n            shuffledThemes = shuffledThemes.filter(x => x !== chosenTheme);\r\n        }\r\n        cardsInfo[chosenTheme].cards = cards;\r\n\r\n        e.currentTarget.classList.toggle('content__shuffle_on');\r\n        this.setState({\r\n            cardsInfo: cardsInfo,\r\n            shuffledThemes: shuffledThemes\r\n        });\r\n        this.setCurrCard(0);\r\n    }\r\n\r\n    delCard = (num, all) => {\r\n        let { cardsInfo, chosenTheme } = this.state;\r\n        let { currCard } = this.props;\r\n        cardsInfo[chosenTheme].cards = all ? [] : cardsInfo[chosenTheme].cards.filter((el, i) => i !== Number(num));\r\n        let newCurr = currCard && !all ? currCard - 1 : 0;\r\n        this.updateCards(cardsInfo, this.state.chosenTheme, newCurr);\r\n    }\r\n\r\n    quit = () => {\r\n        let confirm = document.querySelector('.quit__confirm');\r\n        confirm.classList.remove('confirm_hidden');\r\n        let handler = e => {\r\n            if (e.target.tagName !== 'BUTTON') return;\r\n            confirm.removeEventListener('click', handler);\r\n            confirm.classList.add('confirm_hidden');\r\n            if (e.target.dataset.del === 'no') return;\r\n            localStorage.clear();\r\n            let href = window.location.href.match(/^.+\\/#\\//);\r\n            window.location.assign(href[0]);\r\n        }\r\n        confirm.addEventListener('click', handler);\r\n    }\r\n\r\n    showEditing = () => {\r\n        if (!this.state.showEditing) return;\r\n        return (\r\n            <Editing theme={this.state.chosenTheme} \r\n                     currCard={this.props.currCard}\r\n                     cardsInfo={this.state.cardsInfo}\r\n                     updateCards={this.updateCards}\r\n                     setEditing={this.setEditing} />\r\n        )\r\n    }\r\n\r\n    setEditing = show => {\r\n        this.setState({\r\n            showEditing: show\r\n        });\r\n    }\r\n\r\n    renderAdding = (cardsLength) => {\r\n        if (cardsLength > 999) return null;\r\n        else return (\r\n            <div className='content__control' onClick={() => this.props.setTheme(this.state.chosenTheme)}>\r\n                <Link to='/add' className='content__add'>+</Link>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.name) {\r\n            let href = window.location.href.match(/^.+\\/#\\//);\r\n            window.location.assign(href[0]);\r\n            return null;\r\n        }\r\n        let cardsLength = this.state.cardsInfo[this.state.chosenTheme].cards.length;\r\n        return (\r\n            <div className='content'>\r\n                {this.renderAdding(cardsLength)}\r\n\r\n                <Cards cards={this.state.cardsInfo[this.state.chosenTheme].cards}\r\n                       currCard={this.props.currCard}\r\n                       setCurrCard={this.setCurrCard}\r\n                       delCard={this.delCard}\r\n                       type={this.state.type}\r\n                       setType={this.setType}\r\n                       setEditing={this.setEditing}\r\n                       areShuffled={!!this.state.shuffledThemes.length}  />\r\n\r\n                <FontAwesomeIcon icon={faRandom} onClick={this.shuffleTheme}\r\n                                 className={`content__shuffle ${cardsLength > 1 ? '' : 'content__shuffle_hidden'}`} />\r\n\r\n                <Burger toggleMenu={this.toggleMenu} name={this.props.name} />\r\n                <Menu isOpen={this.state.isMenuOpen}\r\n                      themes={this.state.cardsInfo.map(x => x.theme)}\r\n                      chosenTheme={this.state.chosenTheme}\r\n                      setTheme={this.setTheme}\r\n                      addTheme={this.addTheme}\r\n                      delTheme={this.delTheme}\r\n                      setType={this.setType} />\r\n\r\n                <button className='content__quit' onClick={this.quit}>Quit</button>\r\n\r\n                <Confirm addClass='quit__confirm'/>\r\n                {this.showEditing()}\r\n            </div>\r\n        )\r\n    }\r\n}","import Adding from './Adding';\r\n\r\nexport default Adding;","import React from 'react';\r\nimport './Adding.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Adding extends React.Component {\r\n    validate = (e) => {\r\n        let question = document.querySelector('#q-field').value;\r\n        let answer = document.querySelector('#a-field').value;\r\n        if (!question || !answer) {\r\n            document.querySelector('.adding__warning').classList.remove('adding__warning_hidden');\r\n            e.preventDefault();\r\n            return;\r\n        }\r\n\r\n        this.save(question, answer);\r\n    }\r\n\r\n    save = (question, answer) => {\r\n        let { theme } = this.props;\r\n        let cardsInfo = JSON.parse(localStorage.getItem('cards'));\r\n        cardsInfo[theme].cards.push({\r\n            q: question,\r\n            a: answer\r\n        });\r\n        document.querySelector('.loading').classList.remove('loading_hidden');\r\n        fetch(this.props.url + this.props.id, {\r\n            method: \"PUT\",\r\n            headers:{\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ \"info\": cardsInfo, \"name\": this.props.name })\r\n        })\r\n        .then(response => {\r\n            if (response.status === 200) {\r\n                return response.json();\r\n            } else {\r\n                document.querySelector('.loading').classList.add('loading_hidden');\r\n                return;\r\n            }\r\n        })\r\n        .then(user => {\r\n            localStorage.setItem('cards', JSON.stringify(user.info));\r\n            this.props.setCurrCard(cardsInfo[theme].cards.length - 1);\r\n            let href = window.location.href.match(/^.+\\/#\\//);\r\n            window.location.assign(href[0] + 'content');\r\n        })\r\n    }\r\n\r\n    onInput = (e) => {\r\n        let warning = document.querySelector('.adding__warning');\r\n        if (e.target.value.trim()) {\r\n            warning.classList.add('adding__warning_hidden');\r\n        } else {\r\n            warning.classList.remove('adding__warning_hidden');\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        if (!this.props.id) {\r\n            let href = window.location.href.match(/^.+\\/#\\//);\r\n            window.location.assign(href[0]);\r\n            return null;\r\n        }\r\n        return (\r\n            <div className='adding'>\r\n                <p className='adding__warning adding__warning_hidden'>No question or answer!</p>\r\n                <div className='adding__input input'>\r\n                    <p className='input__title'>Add question</p>\r\n                    <textarea id='q-field' className='input__area input__area_small'\r\n                              onInput={this.onInput}></textarea>\r\n                </div>\r\n                <div className='adding__input input'>\r\n                    <p className='input__title'>Add answer</p>\r\n                    <textarea id='a-field' className='input__area input__area_big'\r\n                              onInput={this.onInput}></textarea>\r\n                </div>\r\n                <button onClick={this.validate} className='adding__save'>Save</button>\r\n                <Link to='/content'>\r\n                    <FontAwesomeIcon className='adding__back' icon={faArrowLeft} />\r\n                </Link>\r\n            </div>\r\n        )\r\n    }\r\n}","import Login from './Login';\r\n\r\nexport default Login;","import React from 'react';\r\nimport './Login.css';\r\n\r\nexport default class Login extends React.Component {\r\n\r\n    login = () => {\r\n        let name = document.querySelector('.login__input[type=\"login\"]').value.toLowerCase();\r\n        let password = document.querySelector('.login__input[type=\"password\"]').value;\r\n        if (!/^\\w{3,}$/.test(name) || !/^\\w{6,}$/.test(password)) {\r\n            return;\r\n        }\r\n        document.querySelector('.loading').classList.remove('loading_hidden');\r\n        fetch(this.props.url, {\r\n            method: \"GET\",\r\n        })       \r\n        .then(response => response.json())\r\n        .then(users => {\r\n            let user = users.find(x => x.name === name);\r\n            if (user) {\r\n                this.checkLogin(user, password)\r\n            } else {\r\n                document.querySelector('.loading').classList.add('loading_hidden');\r\n                this.props.showAlert('User not found :(')\r\n            }\r\n        });\r\n    }\r\n\r\n    checkLogin = (user, password) => {\r\n        fetch(this.props.url + user.id, {\r\n            method: \"POST\",\r\n            headers:{\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ \"password\": password })\r\n        })\r\n        .then(response => response.json())\r\n        .then(info => {\r\n            if (!info.length) {\r\n                document.querySelector('.loading').classList.add('loading_hidden');\r\n                this.props.showAlert('User not found :(')\r\n                return;\r\n            }\r\n            this.props.enter(user.name, user.id, info, password);\r\n        })\r\n    }\r\n\r\n    keyUp = e => {\r\n        if (e.key === 'Enter' && e.target.value.length) {\r\n            this.login();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='auth__form login'>\r\n                <div className='login__input-container'>\r\n                    <input className='login__input' maxLength='20' minLength='3' onInput={this.authOnInput}\r\n                        onClick={e => e.preventDefault()} type='login' placeholder='login' />\r\n                </div>\r\n                <div className='login__input-container'>\r\n                    <input className='login__input' maxLength='20' minLength='8' onInput={this.authOnInput}\r\n                        onClick={e => e.preventDefault()} type='password' placeholder='password' onKeyUp={this.keyUp} />\r\n                </div>\r\n                <div className='login__buttons'>\r\n                    <button className='login__btn login__btn_seagreen' onClick={this.login}>Log in</button>\r\n                    <button className='login__btn login__btn_transparent'\r\n                            onClick={() => this.props.setWindow('signup')}>Sign up</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import Signup from './Signup';\r\n\r\nexport default Signup;","import React from 'react';\r\nimport './Signup.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes, faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default class Login extends React.Component {\r\n\r\n    validate = () => {\r\n        let { name, password } = this.checkInput();\r\n        if (!name) return;\r\n\r\n        document.querySelector('.loading').classList.remove('loading_hidden');\r\n        fetch(this.props.url, {\r\n            method: \"GET\",\r\n        })       \r\n        .then(response => response.json())\r\n        .then(users => {\r\n            let user = users.find(x => x.name === name);\r\n            if (user) {\r\n                document.querySelector('.loading').classList.add('loading_hidden');\r\n                this.props.showAlert('User already exists')\r\n                return;\r\n            }\r\n            this.signup(name, password);\r\n        });\r\n    }\r\n\r\n    signup = (name, password) => {\r\n        fetch(this.props.url, {\r\n            method: \"POST\",\r\n            headers:{\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ \"name\": name, \"password\": password })\r\n        })\r\n        .then(response => response.json())\r\n        .then(user => {\r\n            this.props.enter(name, user.id, user.info, password);\r\n        })\r\n    }\r\n\r\n    checkInput = () => {\r\n        let name = document.querySelector('.signup__input[type=\"login\"]').value.toLowerCase();\r\n        let password = document.querySelectorAll('.signup__input[type=\"password\"]')[0].value;\r\n        let confPassword = document.querySelectorAll('.signup__input[type=\"password\"]')[1].value;\r\n\r\n        if (!/^\\w{3,}$/.test(name) || !/^\\w{6,}$/.test(password) || password !== confPassword) {\r\n            this.props.showInfo(!/^\\w{3,}$/.test(name) || !/^\\w{6,}$/.test(password));\r\n            if (password !== confPassword) {\r\n                document.querySelector('.signup__check').classList.add('signup__check_show');\r\n            }\r\n            return {\r\n                name: null,\r\n                password: null\r\n            };\r\n        }\r\n        return {\r\n            name: name,\r\n            password: password\r\n        };\r\n    }\r\n\r\n    secondPasswordInput = e => {\r\n        let password = document.querySelectorAll('.signup__input[type=\"password\"]')[0].value;\r\n        if (e.target.value === password) {\r\n            document.querySelector('.signup__check').classList.remove('signup__check_show');\r\n        }\r\n    }\r\n\r\n    enter = e => {\r\n        if (e.key === 'Enter') {\r\n            this.validate();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='auth__form signup'>\r\n                <FontAwesomeIcon icon={faArrowLeft} className='signup__back' onClick={() => this.props.setWindow('login')} />\r\n\r\n                <div className='signup__input-container'>\r\n                    <input className='signup__input' maxLength='20' minLength='3'\r\n                        onClick={e => e.preventDefault()} type='login' placeholder='login' />\r\n                </div>\r\n                <div className='signup__input-container'>\r\n                    <input className='signup__input' maxLength='20' minLength='8'\r\n                        onClick={e => e.preventDefault()} type='password' placeholder='password' />\r\n                </div>\r\n                <div className='signup__input-container'>\r\n                    <input className='signup__input' maxLength='20' minLength='8' onInput={this.secondPasswordInput}\r\n                        onClick={e => e.preventDefault()} type='password' placeholder='confirm password' onKeyUp={this.enter} />\r\n                    <FontAwesomeIcon icon={faTimes} className='signup__check signup__check_red' />\r\n                </div>\r\n                    \r\n                <button className='signup__btn' onClick={this.validate}>Sign up</button>\r\n            </div>\r\n        )\r\n    }\r\n}","import Auth from './Auth';\r\n\r\nexport default Auth;","import React from 'react';\r\nimport './Auth.css';\r\nimport Login from './Login';\r\nimport Signup from './Signup';\r\n\r\nexport default class Auth extends React.Component {\r\n    state = {\r\n        window: 'login'\r\n    }\r\n\r\n    showAlert = (text) => {\r\n        let alert = document.querySelector('.alert');\r\n        alert.querySelector('.alert__text').textContent = text;\r\n        alert.classList.add('alert_show');\r\n    }\r\n\r\n    setWindow = name => {\r\n        document.querySelector('.auth__info-text').classList.remove('auth__info-text_show');\r\n        let auth = document.querySelector('.auth');\r\n        auth.classList.add('auth_hidden');\r\n        setTimeout(() => {\r\n            this.setState({\r\n                window: name\r\n            });\r\n            auth.classList.remove('auth_hidden');\r\n        }, 300);\r\n    }\r\n\r\n    enter = (name, id, info, password) => {\r\n        this.props.setUsername(name, id, password);\r\n        localStorage.setItem('name', name);\r\n        localStorage.setItem('id', id);\r\n        localStorage.setItem('cards', JSON.stringify(info));\r\n        window.location.assign(window.location.href + 'content');\r\n    }\r\n\r\n    toggleInfo = () => {\r\n        document.querySelector('.auth__info-text').classList.toggle('auth__info-text_show');\r\n    }\r\n\r\n    showInfo = (shouldShow) => {\r\n        if (shouldShow) {\r\n            document.querySelector('.auth__info-text').classList.add('auth__info-text_show');\r\n        } else {\r\n            document.querySelector('.auth__info-text').classList.remove('auth__info-text_show');\r\n        }\r\n    }\r\n\r\n    renderWindow = () => {\r\n        let { url } = this.props;\r\n        if (this.state.window === 'login') {\r\n            return <Login setWindow={this.setWindow} enter={this.enter} url={url} showAlert={this.showAlert} />;\r\n        }\r\n        return <Signup setWindow={this.setWindow} enter={this.enter} url={url} showInfo={this.showInfo} showAlert={this.showAlert} />;\r\n    }\r\n\r\n    setInfoText = () => {\r\n        if (this.state.window === 'login') {\r\n            return \"If you don't have an account, click sign up.\";\r\n        }\r\n        return <span>Valid characters:<br />aA-zZ, 0-9 and _.<br />Login should contain at least 3 symbols, password - 6.</span>;\r\n    }\r\n\r\n    setAuthTitle = () => {\r\n        if (this.state.window === 'login') {\r\n            return \"Authorization\";\r\n        }\r\n        return \"Registration\";\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='auth'>\r\n                <p className='auth__title'>{this.setAuthTitle()}</p>\r\n                <button className='auth__info-btn' onClick={this.toggleInfo}>i</button>\r\n                <div className='auth__info-text'>{this.setInfoText()}</div>\r\n                {this.renderWindow()}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","import Loading from './Loading';\r\n\r\nexport default Loading;","import React from 'react';\r\nimport './Loading.css';\r\n\r\nexport default class Loading extends React.Component {\r\n    render() {\r\n        const className = `loading ${this.props.forcedDisplay ? \"\" : \"loading_hidden\"}`;\r\n        return (\r\n            <div className={className}>\r\n                <div className=\"loading__container\">\r\n                    <svg viewBox=\"0 0 36 36\" className=\"loading__bar\">\r\n                        <circle id=\"segment\" cx=\"18\" cy=\"18\" r=\"15.91549430918954\" \r\n                                stroke=\"#fff\" strokeWidth=\"4\" fill='transparent'\r\n                                strokeDasharray=\"80 20\"></circle>\r\n                    </svg>\r\n                    <div className=\"loading__title\">Connecting...</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import Alert from './Alert';\r\n\r\nexport default Alert;","import React from 'react';\r\nimport './Alert.css'\r\n\r\nexport default class Alert extends React.Component {\r\n    hide = () => {\r\n        let alertWin = document.querySelector('.alert__window');\r\n        alertWin.classList.add('alert__hiding');\r\n        setTimeout(() => {\r\n            document.querySelector('.alert').classList.remove('alert_show');\r\n            alertWin.classList.remove('alert__hiding');\r\n        }, 300);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={`${this.props.addClass} alert`}>\r\n                <div className='alert__window'>\r\n                    <p className='alert__text'>Alert!</p>\r\n                    <button className='alert__btn' onClick={this.hide}>ok!</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Content from './components/Content';\r\nimport Adding from './components/Adding';\r\nimport Auth from './components/Auth';\r\nimport Loading from './components/Loading';\r\nimport Alert from './components/Alert';\r\nimport './App.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMoon } from '@fortawesome/free-regular-svg-icons';\r\n\r\nimport {\r\n  Route,\r\n  Switch\r\n} from \"react-router-dom\";\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.ping = setInterval(this.pingServer.bind(this), 5000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.ping);\r\n    }\r\n\r\n    state = {\r\n        theme: parseInt(localStorage.getItem('theme')) || 0,\r\n        currCard: parseInt(localStorage.getItem('currCard')) || 0,\r\n        username: localStorage.getItem('name'),\r\n        id: localStorage.getItem('id'),\r\n        password: '',\r\n        render: false\r\n    }\r\n\r\n    setTheme = index => {\r\n        this.setState({ theme: index });\r\n    }\r\n\r\n    setCurrCard = num => {\r\n        this.setState({ currCard: num });\r\n        localStorage.setItem('currCard', num);\r\n    }\r\n\r\n    setUsername = (name, id, password) => {\r\n        this.setState({\r\n            username: name,\r\n            id: id,\r\n            password: password\r\n        });\r\n    }\r\n\r\n    changeColorTheme = () => {\r\n        document.querySelector('.root').classList.toggle('root_black');\r\n    }\r\n\r\n    async pingServer() {\r\n        try {\r\n            const ping = await fetch(this.props.url + \"ping\",\r\n            { method: \"GET\" });\r\n            this.setState({ render: ping.status === 200 });\r\n        } catch (error) {\r\n            this.setState({ render: false });\r\n        }\r\n        \r\n    }\r\n\r\n    render() {\r\n        let { url } = this.props;\r\n        return (\r\n            <div className='container'>\r\n                <p className='container__header'>\r\n                    <span className='container__header_seagreen'>Memory</span> cards\r\n                    <FontAwesomeIcon icon={faMoon} className='moon' onClick={this.changeColorTheme} />\r\n                </p>\r\n                <Loading forcedDisplay={!this.state.render}/>\r\n                {this.state.render &&\r\n                    <div>\r\n                        <Alert />\r\n                        <Switch>\r\n                            <Route exact path='/' render={() => <Auth setUsername={this.setUsername} url={url} />} />\r\n                            <Route exact path='/content' render={() => <Content setTheme={this.setTheme} theme={this.state.theme}\r\n                                                                                name={this.state.username} id={this.state.id} \r\n                                                                                url={url} setCurrCard={this.setCurrCard}\r\n                                                                                currCard={this.state.currCard}\r\n                                                                                password={this.state.password} />} />\r\n                            <Route path='/add' render={() => <Adding theme={this.state.theme} name={this.state.username} \r\n                                                                        id={this.state.id} url={url}\r\n                                                                        setCurrCard={this.setCurrCard} />} />\r\n                        </Switch>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render((\r\n        <HashRouter>\r\n            <App url='https://mc-serv.herokuapp.com/users/'/>\r\n            {/* <App url='http://192.168.0.103:8000/users/'/> */}\r\n        </HashRouter>\r\n    ), document.getElementById('root')\r\n);"],"sourceRoot":""}